<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>com.vmware.card-connectors</groupId>
    <artifactId>hub-ms-teams-connector</artifactId>
    <version>2.8.1-SNAPSHOT</version>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.5.3</version>
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <connector.name>hub-ms-teams</connector.name>
        <com.vmware.card-connectors.version>2.9.6</com.vmware.card-connectors.version>
        <kotlin.version>1.6.0</kotlin.version>
        <kotlin.coroutines.version>1.5.1</kotlin.coroutines.version>
        <dokka.version>1.5.0</dokka.version>
        <jacoco.version>0.8.7</jacoco.version>
        <pmd.plugin.version>3.14.0</pmd.plugin.version>
        <logback.contrib.version>0.1.5</logback.contrib.version>
        <pmd.version>6.37.0</pmd.version>
        <docker.javaImage>openjdk:11-jre</docker.javaImage>
        <kotlin.compiler.incremental>false</kotlin.compiler.incremental>
        <nexus.staging.skip>false</nexus.staging.skip>
        <main.class>com.vmware.connectors.msTeams.ApplicationKt</main.class>
        <versions-maven-plugin.version>2.8.1</versions-maven-plugin.version>
        <jakarta.validation-api.version>2.0.1</jakarta.validation-api.version>
        <jsoup.version>1.14.2</jsoup.version>
        <jackson-module-kotlin.version>2.12.4</jackson-module-kotlin.version>
        <kotlin-logging.version>1.7.4</kotlin-logging.version>
        <docker-plugin.version>0.37.0</docker-plugin.version>
        <jaxb-api.version>2.3.1</jaxb-api.version>
    </properties>

    <name>Workspace One Hub Microsoft Teams Connector</name>
    <description>Hub Microsoft Teams Connector developed for Workspace One Mobile Flows</description>
    <url>https://github.com/vmware/connectors-workspace-one</url>

    <!-- Need to correct the SCM url's after pushing code to github-->
    <licenses>
        <license>
            <name>BSD-2</name>
            <url>https://opensource.org/licenses/BSD-2-Clause</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <scm>
        <url>https://github.com/vmware/connectors-workspace-one</url>
    </scm>

    <pluginRepositories>
        <pluginRepository>
            <id>jcenter</id>
            <name>JCenter</name>
            <url>https://jcenter.bintray.com/</url>
        </pluginRepository>
        <pluginRepository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
        </pluginRepository>
    </pluginRepositories>

    <repositories>
        <repository>
            <id>jcenter</id>
            <url>https://jcenter.bintray.com</url>
        </repository>
        <repository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
            <version>${jakarta.validation-api.version}</version>
        </dependency>
        <dependency>
            <groupId>com.vmware.card-connectors</groupId>
            <artifactId>core</artifactId>
            <version>${com.vmware.card-connectors.version}</version>
        </dependency>
        <dependency>
            <groupId>com.vmware.card-connectors</groupId>
            <artifactId>core-test</artifactId>
            <version>${com.vmware.card-connectors.version}</version>
        </dependency>
        <dependency>
            <groupId>com.vmware.card-connectors</groupId>
            <artifactId>connectors-config</artifactId>
            <version>${com.vmware.card-connectors.version}</version>
        </dependency>
        <dependency>
            <groupId>com.vmware.card-connectors</groupId>
            <artifactId>connectors-test</artifactId>
            <version>${com.vmware.card-connectors.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webflux</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.jsoup/jsoup -->
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>${jsoup.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-coroutines-core</artifactId>
            <version>${kotlin.coroutines.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-coroutines-reactor</artifactId>
            <version>${kotlin.coroutines.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-test-junit</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-kotlin</artifactId>
            <version>${jackson-module-kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>io.github.microutils</groupId>
            <artifactId>kotlin-logging</artifactId>
            <version>${kotlin-logging.version}</version>
        </dependency>

        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>${docker-plugin.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api -->
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>${jaxb-api.version}</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback.contrib</groupId>
            <artifactId>logback-jackson</artifactId>
            <version>${logback.contrib.version}</version>
        </dependency>

        <!-- ch.qos.logback.contrib.json.classic.JsonLayout -->
        <dependency>
            <groupId>ch.qos.logback.contrib</groupId>
            <artifactId>logback-json-classic</artifactId>
            <version>${logback.contrib.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/net.sourceforge.pmd/pmd-core -->
        <dependency>
            <groupId>net.sourceforge.pmd</groupId>
            <artifactId>pmd-core</artifactId>
            <version>${pmd.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/net.sourceforge.pmd/pmd-kotlin -->
        <dependency>
            <groupId>net.sourceforge.pmd</groupId>
            <artifactId>pmd-kotlin</artifactId>
            <version>${pmd.version}</version>
        </dependency>


    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${docker-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>${versions-maven-plugin.version}</version>
                    <configuration>
                        <rulesUri>file:///${basedir}/support/dependency-updates-filter.xml</rulesUri>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <configuration>
                        <mainClass>${main.class}</mainClass>
                        <layout>ZIP</layout>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                </plugin>
                <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-pmd-plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <version>${pmd.plugin.version}</version>
                    <configuration>
                        <rulesets>
                            <ruleset>${project.basedir}/pmdrules.xml</ruleset>
                        </rulesets>
                        <analysisCache>false</analysisCache>
                        <skipPmdError>false</skipPmdError>
                        <targetJdk>11</targetJdk>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.jetbrains.kotlin</groupId>
                    <artifactId>kotlin-maven-plugin</artifactId>
                    <version>${kotlin.version}</version>
                    <executions>
                        <execution>
                            <id>compile</id>
                            <phase>process-sources</phase>
                            <goals>
                                <goal>compile</goal>
                            </goals>
                            <configuration>
                                <args>
                                    <arg>-Xjsr305=strict</arg>
                                </args>
                                <sourceDirs>
                                    <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
                                    <sourceDir>${project.basedir}/src/main/java</sourceDir>
                                </sourceDirs>
                            </configuration>
                        </execution>
                        <execution>
                            <id>test-compile</id>
                            <goals> <goal>test-compile</goal> </goals>
                            <configuration>
                                <args>
                                    <arg>-Xjsr305=strict</arg>
                                </args>
                                <sourceDirs>
                                    <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
                                    <sourceDir>${project.basedir}/src/test/java</sourceDir>
                                </sourceDirs>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.5.1</version>
                    <configuration>
                        <source>12</source>
                        <target>12</target>
                    </configuration>
                    <executions>
                        <!-- Replacing default-compile as it is treated specially by maven -->
                        <execution>
                            <id>default-compile</id>
                            <phase>none</phase>
                        </execution>
                        <!-- Replacing default-testCompile as it is treated specially by maven -->
                        <execution>
                            <id>default-testCompile</id>
                            <phase>none</phase>
                        </execution>
                        <execution>
                            <id>java-compile</id>
                            <phase>compile</phase>
                            <goals> <goal>compile</goal> </goals>
                        </execution>
                        <execution>
                            <id>java-test-compile</id>
                            <phase>test-compile</phase>
                            <goals> <goal>testCompile</goal> </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.jetbrains.dokka</groupId>
                    <artifactId>dokka-maven-plugin</artifactId>
                    <version>${dokka.version}</version>
                    <executions>
                        <execution>
                            <phase>pre-site</phase>
                            <goals>
                                <goal>dokka</goal>
                                <goal>javadoc</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <includes>
                            <include>Module.md</include>
                        </includes>
                        <sourceRoots>
                            <root>
                                <path>src/main/kotlin</path>
                                <!-- See platforms section of documentation -->
                                <!--                            <platforms>JVM</platforms>-->
                            </root>
                        </sourceRoots>
                        <sourceLinks>
                            <link>
                                <dir>${project.basedir}</dir>
                                <url>https://github.com/xenovusinc/vmware-ms-teams-connector.git</url>
                            </link>
                        </sourceLinks>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.sonatype.plugins</groupId>
                    <artifactId>nexus-staging-maven-plugin</artifactId>
                    <version>1.6.8</version>
                    <extensions>true</extensions>
                    <configuration>
                        <serverId>ossrhvmw</serverId>
                        <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                        <autoReleaseAfterClose>true</autoReleaseAfterClose>
                        <skipRemoteStaging>${nexus.staging.skip}</skipRemoteStaging>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>
                    <execution>
                        <id>jacoco-initialize</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                        <execution>
                            <id>jacoco-site</id>
                            <phase>package</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>3.6.0.1398</version>
            </plugin>
            <plugin>
                <groupId>org.jetbrains.dokka</groupId>
                <artifactId>dokka-maven-plugin</artifactId>
            </plugin>
        </plugins>

    </build>

    <distributionManagement>
        <snapshotRepository>
            <id>ossrhvmw</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>ossrhvmw</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

    <profiles>
        <profile>
            <id>push-docker-image</id>
            <activation>
                <activeByDefault>false</activeByDefault>
                <property>
                    <name>bamboo.planRepository.branchName</name>
                    <value>master</value>
                </property>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>io.fabric8</groupId>
                            <artifactId>docker-maven-plugin</artifactId>

                            <configuration>
                                <authConfig>
                                    <username>${docker.hub.username}</username>
                                    <password>${docker.hub.password}</password>
                                </authConfig>

                                <images>
                                    <image>
                                        <name>ws1connectors/${project.artifactId}:${dockerImageTag}</name>
                                        <alias>${project.artifactId}</alias>
                                        <build>
                                            <assembly>
                                                <inline>
                                                    <dependencySets>
                                                        <dependencySet>
                                                            <useProjectArtifact>true</useProjectArtifact>
                                                            <includes>
                                                                <include>com.vmware.card-connectors:${project.artifactId}</include>
                                                            </includes>
                                                        </dependencySet>
                                                    </dependencySets>
                                                </inline>
                                                <targetDir>/opt/vmware/${connector.name}</targetDir>
                                            </assembly>
                                            <from>${docker.javaImage}</from>
                                            <imagePullPolicy>Always</imagePullPolicy>
                                            <workdir>/opt/vmware/${connector.name}</workdir>
                                            <healthCheck>
                                                <interval>20s</interval>
                                                <timeout>5s</timeout>
                                                <retries>6</retries>
                                                <cmd>curl -f http://localhost:8080/health || exit 1</cmd>
                                            </healthCheck>
                                            <entryPoint>
                                                <arg>java</arg>
                                                <arg>-server</arg>
                                                <arg>-XX:MaxRAMPercentage=50</arg>
                                                <arg>-XX:+HeapDumpOnOutOfMemoryError</arg>
                                                <arg>-XX:HeapDumpPath=/tmp</arg>
                                                <arg>-jar</arg>
                                                <arg>/opt/vmware/${connector.name}/${project.artifactId}-${project.version}.jar</arg>
                                            </entryPoint>
                                        </build>
                                    </image>
                                </images>
                            </configuration>
                            <executions>
                                <execution>
                                    <id>build</id>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>build</goal>
                                    </goals>
                                </execution>

                                <execution>
                                    <id>deploy</id>
                                    <phase>deploy</phase>
                                    <goals>
                                        <goal>push</goal>
                                        <goal>remove</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        <profile>
            <id>sonar</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!-- Optional URL to server. Default value is http://localhost:9000 -->
                <sonar.host.url>http://localhost:9000</sonar.host.url>
                <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
                <sonar.java.binaries>target\classes</sonar.java.binaries>
                <sonar.coverage.jacoco.xmlReportPaths>target\site\jacoco\jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
                <sonar.sources>src\main\kotlin</sonar.sources>
                <sonar.tests>src\test\kotlin</sonar.tests>
                <sonar.jacoco.reportsPath>target\jacoco.exec</sonar.jacoco.reportsPath>
                <sonar.language>kotlin</sonar.language>
            </properties>
        </profile>
    </profiles>

</project>
